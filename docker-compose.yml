version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - ifp3

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - ifp3
    depends_on:
      - elasticsearch
      - kafka-zookeeper

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - ifp3
    depends_on:
      - elasticsearch

  kafka-zookeeper:
    build:
      context: kafka/
    container_name: kafka-zookeeper
    # If using docker machine, uncomment the below and set your bootstrap
    # server list to 192.168.99.100:19092
    # environment:
      # - KAFKA_ADVERTISED_HOST_NAME=192.168.99.100
    ports:
      - 2181:2181
      - 9092:9092
      # port 19092 is listening on localhost by default. In normal Docker,
      # you can set your bootstrap server list to localhost:19092
      - 19092:19092
    networks:
      - ifp3

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    build:
      context: zipkin/
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=changeme
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
      - KAFKA_BOOTSTRAP_SERVERS=kafka-zookeeper:9092
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    networks:
      - ifp3
    depends_on:
      - kafka-zookeeper
      - elasticsearch

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=changeme
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
      - elasticsearch

  redis:
    image: redis:5.0.9
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - ifp3

  ifp-registry-1:
    build:
      context: ifp-registry/
    image: ifp-registry
    container_name: ifp-registry-1
    environment:
      #- ZIPKIN_URL=
      - HOST_NAME=ifp-registry-1
      - EUREKA_REGISTER=true
      - EUREKA_FETCH=true
      - EUREKA_SERVICE_URL=http://ifp-registry-2:8761/eureka/,http://ifp-registry-3:8761/eureka/
    ports:
      - 8761:8761
    networks:
      - ifp3

  ifp-registry-2:
    image: ifp-registry
    container_name: ifp-registry-2
    environment:
      #- ZIPKIN_URL=
      - HOST_NAME=ifp-registry-2
      - EUREKA_REGISTER=true
      - EUREKA_FETCH=true
      - EUREKA_SERVICE_URL=http://ifp-registry-1:8761/eureka/,http://ifp-registry-3:8761/eureka/
    ports:
      - 8762:8761
    networks:
      - ifp3

  ifp-registry-3:
    image: ifp-registry
    container_name: ifp-registry-3
    environment:
      #- ZIPKIN_URL=
      - HOST_NAME=ifp-registry-3
      - EUREKA_REGISTER=true
      - EUREKA_FETCH=true
      - EUREKA_SERVICE_URL=http://ifp-registry-1:8761/eureka/,http://ifp-registry-2:8761/eureka/
    ports:
      - 8763:8761
    networks:
      - ifp3

  ifp-config:
    build:
      context: ifp-config/
    image: ifp-config
    container_name: ifp-config
    volumes:
      - type: bind
        source: ./ifp-config/config-repo
        target: /config-repo
        read_only: true
    environment:
      - KAFKA_ZK=kafka-zookeeper:2181
      - KAFKA_URL=kafka-zookeeper:9092
      - EUREKA_SERVICE_URL=http://ifp-registry-1:8761/eureka/,http://ifp-registry-2:8761/eureka/,http://ifp-registry-3:8761/eureka/
    ports:
      - 7070:7070
    networks:
      - ifp3
    depends_on:
      - kafka-zookeeper
      - ifp-registry-1
      - ifp-registry-2
      - ifp-registry-3

  ifp-gateway:
    build:
      context: ifp-gateway/
    image: ifp-gateway
    container_name: ifp-gateway
    environment:
      - KAFKA_ZK=kafka-zookeeper:2181
      - KAFKA_URL=kafka-zookeeper:9092
      - EUREKA_SERVICE_URL=http://ifp-registry-1:8761/eureka/,http://ifp-registry-2:8761/eureka/,http://ifp-registry-3:8761/eureka/
    ports:
      - 8080:8080
    networks:
      - ifp3
    depends_on:
      - kafka-zookeeper
      - ifp-registry-1
      - ifp-registry-2
      - ifp-registry-3
      - ifp-config
      - redis

  ifp-hystrix-dashboard:
    build:
      context: ifp-hystrix-dashboard/
    image: ifp-hystrix-dashboard
    container_name: ifp-hystrix-dashboard
    environment:
      - KAFKA_URL=kafka-zookeeper:9092
      - EUREKA_SERVICE_URL=http://ifp-registry-1:8761/eureka/,http://ifp-registry-2:8761/eureka/,http://ifp-registry-3:8761/eureka/
      - TURBINE_APPLIST=gateway,user-front,user-center
    ports:
      - 8079:8079
    networks:
      - ifp3
    depends_on:
      - kafka-zookeeper
      - ifp-registry-1
      - ifp-registry-2
      - ifp-registry-3

networks:
  ifp3:
    driver: bridge

volumes:
  elasticsearch:
