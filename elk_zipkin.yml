version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    image: elk_elasticsearch
    container_name: elk_elasticsearch
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: /data1/software/elk/elasticsearch-7.6.0/data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
#    command: su - elasticsearch  -c "chown -R elasticsearch:root /usr/share/elasticsearch/data && /usr/local/bin/docker-entrypoint.sh"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      #ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      TAKE_FILE_OWNERSHIP: "true"
    networks:
      - ifp3

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    image: elk_logstash
    container_name: elk_logstash
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - ifp3
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    image: elk_kibana
    container_name: elk_kibana
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - ifp3
    depends_on:
      - elasticsearch

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    build:
      context: zipkin/
    image: zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch:9200
      #- ES_USERNAME=elastic
      #- ES_PASSWORD=changeme
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
      - KAFKA_BOOTSTRAP_SERVERS=172.17.198.212:9092
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    networks:
      - ifp3
    depends_on:
      - elasticsearch

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  zipkin-dependencies:
    #image: openzipkin/zipkin-dependencies
    build:
      context: zipkin-dependencies/
    image: zipkin-dependencies
    container_name: zipkin-dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch:9200
      #- ES_USERNAME=elastic
      #- ES_PASSWORD=changeme
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    networks:
      - ifp3
    depends_on:
      - elasticsearch

networks:
  ifp3:
    #driver: bridge
    external:
      name: ifp3-docker_ifp3

#volumes:
#  elasticsearch:
