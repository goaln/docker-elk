spring:
  application:
    name: gateway
  cloud:
    config:
      fail-fast: true
      name: common, gateway, redis
      profile: dev
      label: master
      discovery:
        enabled: true
        service-id: config-server
    bus:
      #enabled: true
      trace:
        enabled: true
    stream:
      kafka:
        binder:
          zkNodes: ${KAFKA_ZK:ifp3-dev1:2181}
          brokers: ${KAFKA_URL:ifp3-dev1:9092}
    consul:
      host: ${CONSUL_URL:ifp3-dev1}
      port: 8500
      discovery:
        instanceId: ${spring.application.name}
        healthCheckPath: /actuator/health
        healthCheckInterval: 15s
        prefer-ip-address: true
        tags: management.context-path=/actuator, health.path=/health, prometheus
      config:
        enabled: false

server:
  port: 8080

logging:
  level:
    org:
      springframework:
        #        security: debug
        cloud.gateway: info
#        http.server.reactive: DEBUG
#        web.reactive: DEBUG

management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  #      base-path: /
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: ALWAYS

management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      slidingWindowType: TIME_BASED
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 60
      eventConsumerBufferSize: 10
#      recordExceptions:
#        - org.springframework.web.client.HttpServerErrorException
#        - java.io.IOException

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 2
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 5s
      limitForPeriod: 10
      limitRefreshPeriod: 1s
